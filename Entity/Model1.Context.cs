//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class İs_TakipEntities : DbContext
    {
        public İs_TakipEntities()
            : base("name=İs_TakipEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cari_Adresleri> Cari_Adresleri { get; set; }
        public virtual DbSet<Cari_Yetkilileri> Cari_Yetkilileri { get; set; }
        public virtual DbSet<Cariler> Cariler { get; set; }
        public virtual DbSet<Durumlar> Durumlar { get; set; }
        public virtual DbSet<Gorevler> Gorevler { get; set; }
        public virtual DbSet<İlceler> İlceler { get; set; }
        public virtual DbSet<İliskiler> İliskiler { get; set; }
        public virtual DbSet<İller> İller { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Ulkeler> Ulkeler { get; set; }
        public virtual DbSet<Account> Account { get; set; }
        public virtual DbSet<Mail_Bilgileri> Mail_Bilgileri { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_CariAktif(string kod)
        {
            var kodParameter = kod != null ?
                new ObjectParameter("kod", kod) :
                new ObjectParameter("kod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CariAktif", kodParameter);
        }
    
        public virtual ObjectResult<string> sp_CariGetir(string kod)
        {
            var kodParameter = kod != null ?
                new ObjectParameter("kod", kod) :
                new ObjectParameter("kod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_CariGetir", kodParameter);
        }
    
        public virtual ObjectResult<sp_CariGridGoster_Result> sp_CariGridGoster(string kod)
        {
            var kodParameter = kod != null ?
                new ObjectParameter("kod", kod) :
                new ObjectParameter("kod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CariGridGoster_Result>("sp_CariGridGoster", kodParameter);
        }
    
        public virtual int sp_CariSil(string kod, Nullable<bool> @bool)
        {
            var kodParameter = kod != null ?
                new ObjectParameter("kod", kod) :
                new ObjectParameter("kod", typeof(string));
    
            var boolParameter = @bool.HasValue ?
                new ObjectParameter("bool", @bool) :
                new ObjectParameter("bool", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CariSil", kodParameter, boolParameter);
        }
    
        public virtual ObjectResult<sp_CariYetkilileriGetir_Result> sp_CariYetkilileriGetir(string kod)
        {
            var kodParameter = kod != null ?
                new ObjectParameter("kod", kod) :
                new ObjectParameter("kod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CariYetkilileriGetir_Result>("sp_CariYetkilileriGetir", kodParameter);
        }
    
        public virtual ObjectResult<sp_CariYetkilileriGridGoster_Result> sp_CariYetkilileriGridGoster(string kod)
        {
            var kodParameter = kod != null ?
                new ObjectParameter("kod", kod) :
                new ObjectParameter("kod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CariYetkilileriGridGoster_Result>("sp_CariYetkilileriGridGoster", kodParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<string> sp_DurumlariComboGetir()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_DurumlariComboGetir");
        }
    
        public virtual ObjectResult<sp_DurumlariGetir_Result> sp_DurumlariGetir(string kod)
        {
            var kodParameter = kod != null ?
                new ObjectParameter("kod", kod) :
                new ObjectParameter("kod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DurumlariGetir_Result>("sp_DurumlariGetir", kodParameter);
        }
    
        public virtual ObjectResult<sp_GorevlerGridGoster_Result> sp_GorevlerGridGoster(string kod)
        {
            var kodParameter = kod != null ?
                new ObjectParameter("kod", kod) :
                new ObjectParameter("kod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GorevlerGridGoster_Result>("sp_GorevlerGridGoster", kodParameter);
        }
    
        public virtual ObjectResult<sp_GorevleriGetir_Result> sp_GorevleriGetir(string kod)
        {
            var kodParameter = kod != null ?
                new ObjectParameter("kod", kod) :
                new ObjectParameter("kod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GorevleriGetir_Result>("sp_GorevleriGetir", kodParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_İlceGridGoster_Result> sp_İlceGridGoster(string kod, string ilkod)
        {
            var kodParameter = kod != null ?
                new ObjectParameter("kod", kod) :
                new ObjectParameter("kod", typeof(string));
    
            var ilkodParameter = ilkod != null ?
                new ObjectParameter("ilkod", ilkod) :
                new ObjectParameter("ilkod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_İlceGridGoster_Result>("sp_İlceGridGoster", kodParameter, ilkodParameter);
        }
    
        public virtual ObjectResult<sp_İlGridGoster_Result> sp_İlGridGoster(string kod, string ulkekod)
        {
            var kodParameter = kod != null ?
                new ObjectParameter("kod", kod) :
                new ObjectParameter("kod", typeof(string));
    
            var ulkekodParameter = ulkekod != null ?
                new ObjectParameter("ulkekod", ulkekod) :
                new ObjectParameter("ulkekod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_İlGridGoster_Result>("sp_İlGridGoster", kodParameter, ulkekodParameter);
        }
    
        public virtual ObjectResult<sp_İliskileriGetir_Result> sp_İliskileriGetir(string kod)
        {
            var kodParameter = kod != null ?
                new ObjectParameter("kod", kod) :
                new ObjectParameter("kod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_İliskileriGetir_Result>("sp_İliskileriGetir", kodParameter);
        }
    
        public virtual ObjectResult<sp_KullaniciGetir_Result> sp_KullaniciGetir(string kod)
        {
            var kodParameter = kod != null ?
                new ObjectParameter("kod", kod) :
                new ObjectParameter("kod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_KullaniciGetir_Result>("sp_KullaniciGetir", kodParameter);
        }
    
        public virtual ObjectResult<sp_MailBilgileri_Result> sp_MailBilgileri()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MailBilgileri_Result>("sp_MailBilgileri");
        }
    
        public virtual ObjectResult<string> sp_MailleriGoster(string kod, string kod1)
        {
            var kodParameter = kod != null ?
                new ObjectParameter("kod", kod) :
                new ObjectParameter("kod", typeof(string));
    
            var kod1Parameter = kod1 != null ?
                new ObjectParameter("kod1", kod1) :
                new ObjectParameter("kod1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_MailleriGoster", kodParameter, kod1Parameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<string> sp_UlkeComboDoldur()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_UlkeComboDoldur");
        }
    
        public virtual ObjectResult<string> sp_UlkeGridGoster(string ulkekod)
        {
            var ulkekodParameter = ulkekod != null ?
                new ObjectParameter("ulkekod", ulkekod) :
                new ObjectParameter("ulkekod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_UlkeGridGoster", ulkekodParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
